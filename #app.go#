\package main

import (
	"errors"
	"flag"
	"fmt"

	"github.com/disiqueira/tindergo"
)

type App struct {
	token   *string
	tinder  *tindergo.TinderGo
	profile tindergo.Profile
}

func (a *App) start() {
	var err error
	err = a.createValidateToken()
	a.checkError(err)
	err = a.createTinderAutenticate()
	a.checkError(err)
	err = a.getTinderProfile()
	a.checkError(err)
	a.printBasicInfo()
}

func (a *App) createValidateToken() error {
	createTokenFlag()
	return validateTokenFlag()
}

func (a *App) createTokenFlag() {
	a.token = flag.String("token", "", "Your Facebook Token.")
	flag.Parse()
}

func (a *App) validateTokenFlag() error {
	if *a.token == "" {
		return errors.New("You must provide a valid Facebook Token.")
	}
	return nil
}

func (a *App) createTinderAutenticate() error {
	a.createTinderInstance()
	return a.autenticateTinderUsingToken()
}

func (a *App) createTinderInstance() {
	a.tinder = tindergo.New()
}

func (a *App) autenticateTinderUsingToken() error {
	return a.tinder.Authenticate(*a.token)
}

func (a *App) getTinderProfile() error {
	var err error
	a.profile, err = a.tinder.Profile()
	return err
}

func (a *App) printBasicInfo() {
	a.printProfileName()
	a.printBlankLine()
}

func (a *App) printProfileName() {
	fmt.Println("You:")
	fmt.Println("Name:" + a.profile.Name)
}

func (a *App) printBlankLine() {
	fmt.Println("")
}

// checkError Panic application if has an error returned.
func (a *App) checkError(err error) {
	if err != nil {
		panic(err)
	}
}
